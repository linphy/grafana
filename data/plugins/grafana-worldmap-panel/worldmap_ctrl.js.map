{"version":3,"sources":["../src/worldmap_ctrl.js"],"names":["MetricsPanelCtrl","TimeSeries","kbn","_","mapRenderer","DataFormatter","panelDefaults","maxDataPoints","mapCenter","mapCenterLatitude","mapCenterLongitude","initialZoom","valueName","circleMinSize","circleMaxSize","thePositronUrl","theDarkUrl","locationData","thresholds","colors","unitSingle","unitPlural","showLegend","esMetric","decimals","hideEmpty","hideZero","stickyLabels","deciEveryUrl","link","type","currentPoint","theUseName","wordCut","mapDatas","panelDataPointsKey","mapCenters","WorldmapCtrl","$scope","$injector","backendSrv","linkSrv","templateSrv","timeSrv","contextSrv","setMapProvider","defaults","panel","dataFormatter","events","on","onInitEditMode","bind","onDataReceived","onPanelTeardown","onDataSnapshotLoad","loadLocationDataFromFile","that","tileServer","user","lightTheme","setMapSaturationClass","saturationClass","reload","map","snapshotLocationData","locations","jsonpUrl","jsonpCallback","window","$","ajax","url","contentType","dataType","success","res","render","jsonUrl","getJSON","then","reloadLocations","refresh","remove","addEditorTab","dataList","dashboard","snapshot","data","setGeohashValues","tableData","tableHandler","setTableValues","series","seriesHandler","setValues","key","datapoints","bool","indexOf","push","length","z","mapDatasOne","j","dataStoreOne","updateThresholdData","snapshotData","seriesData","alias","target","flotpairs","getFlotPairs","nullPointMode","mapCenterMoved","setZoom","removeLegend","clearCircles","legend","update","split","strValue","Number","trim","size","pop","newColor","index","splice","queryStr","callback","search","query","hits","dashboards","dash","title","find","dashUri","uri","scope","elem","attrs","ctrl","templateUrl"],"mappings":"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","file":"worldmap_ctrl.js","sourcesContent":["/* eslint import/no-extraneous-dependencies: 0 */\r\nimport {MetricsPanelCtrl} from 'app/plugins/sdk';\r\nimport TimeSeries from 'app/core/time_series2';\r\nimport kbn from 'app/core/utils/kbn';\r\n\r\nimport _ from 'lodash';\r\nimport mapRenderer from './map_renderer';\r\nimport DataFormatter from './data_formatter';\r\nimport './css/worldmap-panel.css!';\r\n\r\nconst panelDefaults = {\r\n  maxDataPoints: 1,\r\n  mapCenter: '(0째, 0째)',\r\n  mapCenterLatitude: 0,\r\n  mapCenterLongitude: 0,\r\n  initialZoom: 1,\r\n  valueName: 'total',\r\n  circleMinSize: 2,\r\n  circleMaxSize: 30,\r\n  thePositronUrl: '',\r\n  theDarkUrl: '',\r\n  locationData: 'countries',\r\n  thresholds: '0,10',\r\n  colors: ['rgba(245, 54, 54, 0.9)', 'rgba(237, 129, 40, 0.89)', 'rgba(50, 172, 45, 0.97)'],\r\n  unitSingle: '',\r\n  unitPlural: '',\r\n  showLegend: true,\r\n  esMetric: 'Count',\r\n  decimals: 0,\r\n  hideEmpty: false,\r\n  hideZero: false,\r\n  stickyLabels: false,\r\n  deciEveryUrl:[\r\n    {\r\n      link:{\r\n        type: 'dashboard'\r\n      },\r\n      currentPoint: '',\r\n      theUseName:'',\r\n      wordCut:''\r\n    }\r\n  ],\r\n  mapDatas: [],\r\n  panelDataPointsKey: []\r\n};\r\n\r\nconst mapCenters = {\r\n  '(0째, 0째)': {mapCenterLatitude: 0, mapCenterLongitude: 0},\r\n  'North America': {mapCenterLatitude: 40, mapCenterLongitude: -100},\r\n  'Europe': {mapCenterLatitude: 46, mapCenterLongitude: 14},\r\n  'West Asia': {mapCenterLatitude: 26, mapCenterLongitude: 53},\r\n  'SE Asia': {mapCenterLatitude: 10, mapCenterLongitude: 106}\r\n};\r\nvar that;\r\nexport default class WorldmapCtrl extends MetricsPanelCtrl {\r\n  constructor($scope, $injector, backendSrv, linkSrv, templateSrv, timeSrv, contextSrv) {\r\n    super($scope, $injector);\r\n\r\n    this.setMapProvider(contextSrv);\r\n    _.defaults(this.panel, panelDefaults);\r\n\r\n    this.dataFormatter = new DataFormatter(this, kbn);\r\n\r\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\r\n    this.events.on('data-received', this.onDataReceived.bind(this));\r\n    this.events.on('panel-teardown', this.onPanelTeardown.bind(this));\r\n    this.events.on('data-snapshot-load', this.onDataSnapshotLoad.bind(this));\r\n    this.backendSrv = backendSrv;\r\n    this.timeSrv = timeSrv;\r\n    this.linkSrv = linkSrv;\r\n    this.loadLocationDataFromFile();\r\n    that = this;\r\n  }\r\n\r\n  setMapProvider(contextSrv) {\r\n    this.tileServer = contextSrv.user.lightTheme ? 'CartoDB Positron' : 'CartoDB Dark';\r\n    this.setMapSaturationClass();\r\n  }\r\n\r\n  setMapSaturationClass() {\r\n    if (this.tileServer === 'CartoDB Dark') {\r\n      this.saturationClass = 'map-darken';\r\n    } else {\r\n      this.saturationClass = '';\r\n    }\r\n  }\r\n\r\n  loadLocationDataFromFile(reload) {\r\n    if (this.map && !reload) return;\r\n\r\n    if (this.panel.snapshotLocationData) {\r\n      this.locations = this.panel.snapshotLocationData;\r\n      return;\r\n    }\r\n\r\n    if (this.panel.locationData === 'jsonp endpoint') {\r\n      if (!this.panel.jsonpUrl || !this.panel.jsonpCallback) return;\r\n\r\n      window.$.ajax({\r\n        type: 'GET',\r\n        url: this.panel.jsonpUrl + '?callback=?',\r\n        contentType: 'application/json',\r\n        jsonpCallback: this.panel.jsonpCallback,\r\n        dataType: 'jsonp',\r\n        success: (res) => {\r\n          this.locations = res;\r\n          this.render();\r\n        }\r\n      });\r\n    } else if (this.panel.locationData === 'json endpoint') {\r\n      if (!this.panel.jsonUrl) return;\r\n\r\n      window.$.getJSON(this.panel.jsonUrl).then((res) => {\r\n        this.locations = res;\r\n        this.render();\r\n      });\r\n    } else if (this.panel.locationData === 'table') {\r\n      // .. Do nothing\r\n    } else if (this.panel.locationData !== 'geohash') {\r\n      window.$.getJSON('public/plugins/grafana-worldmap-panel/data/' + this.panel.locationData + '.json')\r\n        .then(this.reloadLocations.bind(this));\r\n    }\r\n  }\r\n\r\n  reloadLocations(res) {\r\n    this.locations = res;\r\n    this.refresh();\r\n  }\r\n\r\n  onPanelTeardown() {\r\n    if (this.map) this.map.remove();\r\n  }\r\n\r\n  onInitEditMode() {\r\n    this.addEditorTab('Worldmap', 'public/plugins/grafana-worldmap-panel/partials/editor.html', 2);\r\n    this.addEditorTab('Url映射', 'public/plugins/grafana-worldmap-panel/partials/setUrl.html', 3);\r\n  }\r\n\r\n  onDataReceived(dataList) {\r\n    if (!dataList) return;\r\n    this.dataList = dataList;\r\n    if (this.dashboard.snapshot && this.locations) {\r\n      this.panel.snapshotLocationData = this.locations;\r\n    }\r\n\r\n    const data = [];\r\n    this.panel.mapDatas = [];\r\n    if (this.panel.locationData === 'geohash') {\r\n      this.dataFormatter.setGeohashValues(dataList, data);\r\n    } else if (this.panel.locationData === 'table') {\r\n      const tableData = dataList.map(DataFormatter.tableHandler.bind(this));\r\n      this.dataFormatter.setTableValues(tableData, data);\r\n    } else {\r\n      this.series = dataList.map(this.seriesHandler.bind(this));\r\n      this.dataFormatter.setValues(data);\r\n    }\r\n    this.data = data;\r\n    //建立数据\r\n    for (var key in dataList[0].datapoints[0]) {\r\n      var bool = this.panel.panelDataPointsKey.indexOf(key);\r\n      if (bool === -1) {\r\n        this.panel.panelDataPointsKey.push(key);\r\n      }\r\n    }\r\n    if (dataList && dataList.length > 0) {\r\n      for (let z = 0; z < this.panel.deciEveryUrl.length; z++) {\r\n        var mapDatasOne = [];\r\n        for (let j = 0; j < dataList[0].datapoints.length; j++) {\r\n          var dataType = this.panel.deciEveryUrl[z].theUseName;\r\n          var dataStoreOne = dataList[0].datapoints[j][dataType];\r\n          mapDatasOne.push(dataStoreOne);\r\n        }\r\n        this.panel.mapDatas.push(mapDatasOne);\r\n      }\r\n    }\r\n    \r\n    this.updateThresholdData();\r\n    this.render();\r\n  }\r\n\r\n  onDataSnapshotLoad(snapshotData) {\r\n    this.onDataReceived(snapshotData);\r\n  }\r\n\r\n  seriesHandler(seriesData) {\r\n    const series = new TimeSeries({\r\n      datapoints: seriesData.datapoints,\r\n      alias: seriesData.target,\r\n    });\r\n\r\n    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\r\n    return series;\r\n  }\r\n\r\n  setNewMapCenter() {\r\n    if (this.panel.mapCenter !== 'custom') {\r\n      this.panel.mapCenterLatitude = mapCenters[this.panel.mapCenter].mapCenterLatitude;\r\n      this.panel.mapCenterLongitude = mapCenters[this.panel.mapCenter].mapCenterLongitude;\r\n    }\r\n    this.mapCenterMoved = true;\r\n    this.render();\r\n  }\r\n\r\n  setZoom() {\r\n    this.map.setZoom(this.panel.initialZoom || 1);\r\n  }\r\n\r\n  toggleLegend() {\r\n    if (!this.panel.showLegend) {\r\n      this.map.removeLegend();\r\n    }\r\n    this.render();\r\n  }\r\n\r\n  toggleStickyLabels() {\r\n    this.map.clearCircles();\r\n    this.render();\r\n  }\r\n\r\n  changeThresholds() {\r\n    this.updateThresholdData();\r\n    this.map.legend.update();\r\n    this.render();\r\n  }\r\n\r\n  updateThresholdData() {\r\n    this.data.thresholds = this.panel.thresholds.split(',').map((strValue) => {\r\n      return Number(strValue.trim());\r\n    });\r\n    while (_.size(this.panel.colors) > _.size(this.data.thresholds) + 1) {\r\n      // too many colors. remove the last one.\r\n      this.panel.colors.pop();\r\n    }\r\n    while (_.size(this.panel.colors) < _.size(this.data.thresholds) + 1) {\r\n      // not enough colors. add one.\r\n      const newColor = 'rgba(50, 172, 45, 0.97)';\r\n      this.panel.colors.push(newColor);\r\n    }\r\n  }\r\n\r\n  changeLocationData() {\r\n    this.loadLocationDataFromFile(true);\r\n\r\n    if (this.panel.locationData === 'geohash') {\r\n      this.render();\r\n    }\r\n  }\r\n  addAnotherUrl () {\r\n    this.panel.deciEveryUrl.push(\r\n      {\r\n        link:{\r\n          type: 'dashboard'\r\n        },\r\n        currentPoint: '',\r\n        theUseName:'',\r\n        wordCut:''\r\n      });\r\n  }\r\n  removeAnotherUrl (index) {\r\n    this.panel.deciEveryUrl.splice(index, 1);\r\n  }\r\n  searchDashboards(queryStr, callback) {\r\n    that.backendSrv.search({query: queryStr}).then(function(hits) {\r\n      var dashboards = _.map(hits, function(dash) {\r\n        return dash.title;\r\n      });\r\n      callback(dashboards);\r\n    });\r\n  };\r\n  dashboardChanged(link) {\r\n    that.backendSrv.search({query: link.dashboard}).then(function(hits) {\r\n      var dashboard = _.find(hits, {title: link.dashboard});\r\n      if (dashboard) {\r\n        link.dashUri = dashboard.uri;\r\n        link.title = dashboard.title;\r\n      }\r\n    });\r\n  };\r\n/* eslint class-methods-use-this: 0 */\r\n  link(scope, elem, attrs, ctrl) {\r\n    mapRenderer(scope, elem, attrs, ctrl);\r\n  }\r\n}\r\n\r\nWorldmapCtrl.templateUrl = 'module.html';\r\n"]}