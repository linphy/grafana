{"version":3,"sources":["../src/airgap_charts_ctrl.js"],"names":["$","_","echarts","DatasourceUtil","AirgapChartsCtrl","ctrl","elem","obj","find","empty","allHeight","height","$timeout","panel","isCoaxial","showSplitCharts","time","showCoaxialCharts","systemColor","getChangeData","seriesData","index","bar","isAlignPhase","offest","kksList","length","oldArr","slice","newArr","concat","isShowExtension","sum","i","avg","getTempData","data","kksName","dataType","yAxis","min","axisLabel","formatter","getFormatter","splitLine","lineStyle","color","y","series","name","type","normal","width","showSymbol","symbol","itemStyle","isShowOutline","step","initGraph","xArr","yArr","sArr","kksNameArr","parEle","myChart","init","option","xAxis","isLastChart","defaults","getChartDefaults","group","grid","bottom","setOption","dataTime","divArr","promises","div","id","push","append","promise","getWaveDataByTime","tabIndex","Promise","all","then","isArray","charts","forEach","item","getXAxis","x","temp","kksInfo","getKeyPhaseSeries","chart","connect","catch","console","error","appendTo","firstData","eoption"],"mappings":"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","file":"airgap_charts_ctrl.js","sourcesContent":["import $ from 'jquery';\r\nimport _ from 'lodash';\r\nimport echarts from 'vendor/echarts/echarts.min.js';\r\nimport DatasourceUtil from './datasource_util.js';\r\n\r\nexport default class AirgapChartsCtrl {\r\n  constructor(ctrl) {\r\n    // ctrl\r\n    this.ctrl = ctrl;\r\n  }\r\n\r\n  _render(elem) {\r\n    var ctrl = this.ctrl;\r\n    var obj = elem.find('.data-panel-charts').empty();\r\n    var allHeight = (ctrl.height >= 200 ? ctrl.height : 550) - 73;\r\n    ctrl.$timeout(() => {\r\n      if (!ctrl.panel.isCoaxial) {\r\n        showSplitCharts(obj, allHeight, ctrl.time); //分轴显示\r\n      } else {\r\n        showCoaxialCharts(obj, allHeight, ctrl.time); //同轴显示\r\n      }\r\n    });\r\n\r\n    var systemColor = [\"#7eb26d\", \"#EE0000\", \"#0000EE\", \"#EEEE00\", \"#8DEEEE\",\r\n      \"#1874CD\", \"#00EE00\", \"#008B8B\"\r\n    ];\r\n\r\n    function getChangeData(seriesData, index) {\r\n      if (ctrl.panel.bar.isAlignPhase && index > 0) { //如果点击了相位，按照+x方向排序\r\n        var offest = (ctrl.kksList.length - index) * seriesData.length /\r\n          ctrl.kksList.length;\r\n        var oldArr = seriesData.slice(0, offest); //左边的数据（要放到后面）\r\n        var newArr = seriesData.slice(offest, seriesData.length);\r\n        seriesData = newArr.concat(oldArr); //数组合并\r\n      }\r\n\r\n      if (ctrl.panel.bar.isShowExtension) {\r\n        var sum = 0;\r\n        for (var i = 0; i < seriesData.length; i++) {\r\n          sum += seriesData[i];\r\n        }\r\n        var avg = sum / seriesData.length;\r\n        for (var i = 0; i < seriesData.length; i++) {\r\n          seriesData[i] = seriesData[i] - avg;\r\n        }\r\n      }\r\n\r\n      return seriesData;\r\n    }\r\n\r\n    function getTempData(data, index, kksName, dataType) {\r\n      var yAxis = {\r\n        min: \"dataMin\",\r\n        axisLabel: {\r\n          formatter: DatasourceUtil.getFormatter(2, \"\")\r\n        },\r\n        splitLine: {\r\n          lineStyle: {\r\n            color: ['#444343']\r\n          }\r\n        }\r\n      }\r\n\r\n      var seriesData = getChangeData(data.y, index);\r\n      var series = {\r\n        name: kksName,\r\n        type: \"line\",\r\n        data: seriesData,\r\n        lineStyle: {\r\n          normal: {\r\n            width: 1\r\n          }\r\n        },\r\n        showSymbol: false, //不显示与X轴对应的坐标\r\n        symbol: \"circle\", //对应图例的图标 + 鼠标提示的图形\r\n        itemStyle: {\r\n          normal: {\r\n            color: systemColor[index]\r\n          }\r\n        } //对应的图例的图标颜色\r\n      };\r\n\r\n      if (dataType == 1) {\r\n        if (ctrl.panel.bar.isShowOutline) { //点击了棒图里面的轮廓图\r\n          series.step = 'middle'; //新增的属性\r\n        } else {\r\n          series.type = \"bar\";\r\n        }\r\n      }\r\n\r\n      return [yAxis, series];\r\n    }\r\n\r\n    /**\r\n     * 初始化eChart的配置\r\n     */\r\n    function initGraph(xArr, yArr, sArr, kksNameArr, index, parEle) {\r\n\r\n      var myChart = echarts.init(parEle[index]);\r\n      var option = {\r\n        itemStyle: {\r\n          normal: {\r\n            color: systemColor[index]\r\n          }\r\n        },\r\n        xAxis: xArr,\r\n        yAxis: yArr,\r\n        series: sArr\r\n      };\r\n\r\n      var isLastChart = index == ctrl.kksList.length - 1;\r\n      _.defaults(option, DatasourceUtil.getChartDefaults(kksNameArr,\r\n        isLastChart));\r\n\r\n      myChart.group = \"index_\" + index;\r\n\r\n      if (!isLastChart) {\r\n        option.grid.bottom = 5;\r\n      }\r\n\r\n      myChart.setOption(option);\r\n      return myChart;\r\n    }\r\n\r\n\r\n    function showSplitCharts(obj, allHeight, dataTime) {\r\n      allHeight = allHeight - 10; // 最下面的图表（数据筛选条 + 坐标）共占据50像素高度\r\n      let kksList = ctrl.kksList;\r\n      let height = allHeight / kksList.length;\r\n      let divArr = [];\r\n\r\n      let promises = [];\r\n      for (let i = 0; i < kksList.length; i++) {\r\n\r\n        if (i == kksList.length - 1) {\r\n          height += 10;\r\n        }\r\n        let div = $(\r\n          `<div class='myDiv_${ctrl.panel.id}_${i}' style='height:${height}px'></div>`\r\n        );\r\n        divArr.push(div[0]);\r\n        obj.append(div);\r\n        let promise = ctrl.getWaveDataByTime(dataTime, ctrl.panel.tabIndex,\r\n          ctrl.kksList[i]);\r\n        promises.push(promise);\r\n      }\r\n\r\n      Promise.all(promises)\r\n        .then(data => {\r\n\r\n          if (_.isArray(data)) {\r\n\r\n            let charts = [];\r\n            let kksNameArr = [];\r\n\r\n            data.forEach((item, index) => {\r\n\r\n              if (!item)\r\n                return;\r\n\r\n              let xArr = [];\r\n              let yArr = [];\r\n              let sArr = [];\r\n              xArr.push(DatasourceUtil.getXAxis(item.x, (index == ctrl.kksList\r\n                .length - 1), ctrl.panel.tabIndex));\r\n              let temp = getTempData(item, index, item.kksInfo.name,\r\n                ctrl.panel.tabIndex);\r\n              yArr.push(temp[0]);\r\n              sArr.push(temp[1]);\r\n\r\n              //气隙轮廓需要显示键相\r\n              if (ctrl.panel.tabIndex == 0 && item.y.length > 0) {\r\n                sArr.push(DatasourceUtil.getKeyPhaseSeries(item));\r\n                kksNameArr.push(\"键相\");\r\n              }\r\n              let chart = initGraph(xArr, yArr, sArr, kksNameArr, index,\r\n                divArr);\r\n              charts.push(chart);\r\n              index++;\r\n            });\r\n            echarts.connect(charts);\r\n          }\r\n        })\r\n        .catch(console.error)\r\n    };\r\n\r\n\r\n\r\n\r\n    function showCoaxialCharts(obj, height, dataTime) {\r\n      let div = $(`<div class='myDiv' style='height:${height}px'></div>`).appendTo(\r\n        obj);\r\n      let myChart = echarts.init(div[0]);\r\n      let kksList = ctrl.kksList;\r\n      let kksNameArr = [];\r\n      let sArr = [];\r\n      let promises = [];\r\n      let firstData;\r\n\r\n      for (let i = 0; i < kksList.length; i++) {\r\n        let data = ctrl.getWaveDataByTime(dataTime, ctrl.panel.tabIndex, kksList[i]);\r\n        promises.push(data);\r\n      }\r\n\r\n      Promise.all(promises)\r\n        .then(data => {\r\n\r\n          if (_.isArray(data)) {\r\n\r\n            data.forEach((item, index) => {\r\n              if (!item) return;\r\n              if (index == 0)\r\n                firstData = item;\r\n              kksNameArr.push(item.kksInfo.name);\r\n              let seriesData = getChangeData(item.y, index);\r\n              let series = {\r\n                name: item.kksInfo.name,\r\n                type: 'line',\r\n                data: seriesData,\r\n                showSymbol: false, //不显示与X轴对应的坐标\r\n                symbol: \"circle\",\r\n                lineStyle: {\r\n                  normal: {\r\n                    width: 1\r\n                  }\r\n                },\r\n                itemStyle: {\r\n                  normal: {\r\n                    color: systemColor[index]\r\n                  }\r\n                }\r\n              };\r\n\r\n              if (ctrl.panel.tabIndex == 1) {\r\n                if (ctrl.panel.bar.isShowOutline) { //点击了棒图里面的轮廓图\r\n                  series.step = 'middle'; //新增的属性\r\n                } else {\r\n                  series.type = \"bar\";\r\n                }\r\n              }\r\n\r\n              sArr.push(series);\r\n              //原始波形，显示键相\r\n              if (ctrl.panel.tabIndex == 0) {\r\n                sArr.push(DatasourceUtil.getKeyPhaseSeries(item));\r\n                kksNameArr.push(\"键相\");\r\n              }\r\n            });\r\n\r\n\r\n            var eoption = {\r\n              xAxis: DatasourceUtil.getXAxis(firstData.x, true, ctrl.panel\r\n                .tabIndex),\r\n              yAxis: {\r\n                min: \"dataMin\",\r\n                axisLabel: {\r\n                  formatter: DatasourceUtil.getFormatter(0, \"\")\r\n                },\r\n                splitLine: {\r\n                  lineStyle: {\r\n                    color: ['#444343']\r\n                  }\r\n                }\r\n              },\r\n              series: sArr\r\n            };\r\n            _.defaults(eoption, DatasourceUtil.getChartDefaults(kksNameArr,\r\n              true));\r\n\r\n            myChart.setOption(eoption);\r\n          }\r\n\r\n        }).catch(console.error);\r\n    }\r\n  }\r\n\r\n\r\n\r\n}"]}